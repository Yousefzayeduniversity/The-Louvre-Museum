# artwork.py
class Artwork:
    def __init__(self, title, artist, date, significance, location):
        self.title = title
        self.artist = artist
        self.date = date
        self.significance = significance
        self.location = location


# exhibition.py
from artwork import Artwork

class Exhibition:
    def __init__(self, name, duration, location):
        self.name = name
        self.duration = duration
        self.location = location
        self.artworks = []  # list to store artworks


# visitor.py
class Visitor:
    def __init__(self, name, age, ticket_type, ticket_price):
        self.name = name
        self.age = age
        self.ticket_type = ticket_type
        self.ticket_price = ticket_price


# ticket.py
class Ticket:
    def __init__(self, event_name, price, type):
        self.event_name = event_name
        self.price = price
        self.type = type
# test_cases.py
import unittest
from artwork import Artwork
from exhibition import Exhibition
from visitor import Visitor
from ticket import Ticket

class TestMuseumSystem(unittest.TestCase):
    def test_add_artwork(self):
        artwork = Artwork("Mona Lisa", "Leonardo da Vinci", "1503", "Famous portrait", "Permanent Gallery")
        self.assertEqual(artwork.title, "Mona Lisa")
        self.assertEqual(artwork.artist, "Leonardo da Vinci")

    def test_new_exhibition(self):
        exhibition = Exhibition("Renaissance Art", "3 months", "Exhibition Hall A")
        self.assertEqual(exhibition.name, "Renaissance Art")
        self.assertEqual(exhibition.duration, "3 months")

    def test_purchase_ticket(self):
        ticket = Ticket("Renaissance Art Exhibition", 50, "Regular")
        self.assertEqual(ticket.event_name, "Renaissance Art Exhibition")
        self.assertEqual(ticket.price, 50)
        self.assertEqual(ticket.type, "Regular")

    def test_visitor_info(self):
        visitor = Visitor("John Doe", 30, "Regular", 63)
        self.assertEqual(visitor.name, "John Doe")
        self.assertEqual(visitor.age, 30)

if __name__ == '__main__':
    unittest.main()
